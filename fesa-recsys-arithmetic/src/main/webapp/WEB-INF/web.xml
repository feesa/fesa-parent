<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance 
	http://www.springmodules.org/schema/cache/springmodules-cache.xsd 
	http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:configs/applicationContext.xml,classpath*:configs/applicationContext-security.xml</param-value>
	</context-param>
	<!-- Spring 配置  -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- Spring MVC配置 -->
	<servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:configs/applicationContext-mvc.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<filter>
		<filter-name>basicFilter</filter-name>
		<filter-class>com.fs.app.recsys.arithmetic.utils.SimpleCORSFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>basicFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 配置过滤器，同时把所有的请求都转为utf-8编码 -->
	<filter>
		<filter-name>Spring character encoding filter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>Spring character encoding filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- Spring的OpenSessionInView实现 -->  
	<filter>  
	    <filter-name>openSessionInViewFilter</filter-name>  
	    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>  
		<!-- singleSession默认为true,若设为false则等于没用OpenSessionInView 。所以默认可以不写 
	    <init-param>  
	       <param-name>singleSession</param-name>  
	       <param-value>true</param-value>   
	    </init-param>
	    --> 
		<!--指定org.springframework.orm.hibernate3.LocalSessionFactoryBean在spring配置文件中的名称,默认值为sessionFactory。 如果LocalSessionFactoryBean在spring中的名称不是sessionFactory,该参数一定要指定,否则会出现找不到sessionFactory的例外。所以默认可以不写  
	 	<init-param>  
	   	  <param-name>sessionFactoryBean</param-name>  
	   	  <param-value>sessionFactory</param-value>  
	  	</init-param>
	  	--> 
	</filter>  
	<filter-mapping>  
	    <filter-name>openSessionInViewFilter</filter-name>  
	    <url-pattern>/*</url-pattern>  
	</filter-mapping>
	<!-- 配置找不到页面时返回的页面 -->
	<error-page>
		<error-code>404</error-code>
		<location>/front/error.jsp</location>
	</error-page>
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
